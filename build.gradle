import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.DockerPushImage
import com.bmuschko.gradle.docker.tasks.image.Dockerfile


plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.bmuschko.docker-remote-api' version "$dockerVersion" apply false
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

def javaProjects = [
		project(':user-management-ms'),
		project(':book-management-ms')
]

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

//configure(javaProjects) {
//	apply plugin: 'com.bmuschko.docker-remote-api'
//
//	task dockerFile(type: Dockerfile, dependsOn: assemble) {
//		destFile.set(project.file('Dockerfile'))
//		from "alpine:$alpineVersion"
//		runCommand 'apk add --no-cache openjdk17'
//		copyFile "build/libs/${jar.archiveFileName.get()}", '/app/'
//		workingDir '/app/'
//		entryPoint 'java'
//		defaultCommand '-jar', "/app/${jar.archiveFileName.get()}"
//		println "${project}"
//	}
//
//	task dockerBuild(type: DockerBuildImage, dependsOn: dockerFile) {
//		inputDir.set(file("$projectDir/."))
//		doLast {
//			println("creatig image: $dockerRepoUrl/${project.name}:$version")
//		}
//		images.add("$dockerRepoUrl/${project.name}:$version")
//	}
//
//	task dockerPush(type: DockerPushImage, dependsOn: dockerBuild) {
//		images.add("$dockerRepoUrl/${project.name}:$version")
//
//		registryCredentials.setUsername("$dockerHubUsername")
//		registryCredentials.setPassword("$dockerHubPassword")
//		registryCredentials.setEmail("$dockerHubEmail")
//	}
//}

tasks.named('test') {
	useJUnitPlatform()
}
